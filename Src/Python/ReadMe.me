****************************GeneTech****************************

GeneTech (extracted from Genetic Technology mapping) is a tool which allows a user to generate genetic logic circuits only by specifying the logical function desired to be achieved in a living cell. It performs Boolean optimization, followed by synthesis and technology mapping using a library of genetic logic gates. The genetic logic gates library used in this work has been developed and tested in the laboratory by MIT and Boston University [1]. GeneTech takes the Boolean expression of a genetic circuit as input, and then first optimize it. Afterwards, it synthesizes the optimized Boolean expression into NOR-NOT form in order to construct the circuit using the real NOR/NOT gates available in the genetic gates library [1]. In the end, GeneTech performs technology mapping to generate all the feasible circuits, with different genetic gates, to achieve the desired logical behavior.  

After performing all the operations to generate the possible circuits, it processes all the circuits one by one to generate their standard SBOL files, Logical Representation and SBOL Visual Representation, and now you will able to save all the desired circuits and their representations as well, to be used in future or import in any other software.

GeneTech is a java and python based tool and is now available in executable application format. In this short document, you will learn how to use GeneTech (v2.0) to develop genetic circuits.  

Stochastic simulation algorithm (SSA) has been implemented to perform stochastic simulations of SBML models. Furthermore, D-VASim is also capable of simulating the deterministic behavior of a bio model by solving ordinary differential equations. 

Latest version of GeneTech can be downloaded from http://bda.compute.dtu.dk/downloads/genetech/. The sample set of genetic Boolean expressions have also been included in the download package. 


***************************************************************************

In this section, you will learn how to run GeneTech and construct desired genetic circuits.

Once the tool is installed, it can be opened by double clicking it.
On the main window you will se multiple input entries described below.

1. Input Expression: The logic in the form of a Boolean Expression is inserted here.
The input (Boolean Exoression) should be in standard Sum of Product (SOP) or Product of Sum (POS) form.

The example of a standard SOP form of a Boolean expression is:
                       
               a.b.c+a.b.c+a.b.c

The example of a standard POS form of a Boolean expression is:
                       
               (a+b+c).(a+b+c).(a+b+c)

Alert – The inverted terms should be described by “ ' ”; 
ANDed terms with “ . ”; and 
ORed terms with “ + ”, without any spaces.

Therefore, a and b = a.b
a or b = a+b
not(a) = a'

Important: All the inputs are given in the form of input inducers IPTG, aTc and Arabinose.
Names, spelling and the case of input inducers should remain the same i.e., IPTG cannot be iptg; aTc cannot be ATC or atc, etc.

2. Maximum No. of Gates: User can specify that how many gates should be in a circuit at max  in the generated circuit by a specific given Boolean expression.

3. Maximim Delay: All the gates in a circuit offer a delay and a user and specify what should be the maximum delay offered by an entire circuit. If 10 s is inserted in this input then only those circuits will be generated that offer delay less than or equal to 10 s.

Note: All the delay inputs should be inserted in seconds. All other units must be converted in seconds first in order to generate the correct results.

4. No. of circuits: A user can specify that how many circuits should be generated by a specific Boolean expression. For example a Boolean espression can generate 6 circuits but if a user inputs 3 here then only 3 circuits will be developed.

5. Order by: A user can order the circuits either by the delay of the circuits or by the number of gates available in the circuit.

Once all the inputs are inserted, user must press enter button to genetare all feasible circuits.
After pressing enter the user should wait untill the progress bar shows the count of 100%. 
Once the progress bar shows 100% and is all green, it indicates that all the genetic circuits have been created and are ready to use.

Below are some example Boolean expression which a user can use to test the tool.

1. IPTG.aTc.Arabinose'+IPTG'.aTc.Arabinose'+IPTG.aTc'.Arabinose'
2. IPTG'.aTc'.Arabinose'+IPTG'.aTc.Arabinose'+IPTG.aTc'.Arabinose
3. IPTG'.aTc.Arabinose'+IPTG'.aTc.Arabinose+IPTG.aTc.Arabinose'
4. IPTG'.aTc'.Arabinose+IPTG.aTc'.Arabinose'+IPTG.aTc'.Arabinose


***********************Happy Generating Genetic Circuits***********************
